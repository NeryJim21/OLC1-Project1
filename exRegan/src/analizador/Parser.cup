/*
* ORGANIZACIÓN DE LENGUAJES Y COMPILADORES 1 SECCIÓN C
* PROYECTO 1 - EXREGAN
* PRIMER SEMESTRE 2023
* NERY JIMÉNEZ - 201700381
*/

package analizador;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;
import Errors.Errors;
import metodoArbol.*;

parser code
{:
    ArrayList<MetodoArbol> arboles = new ArrayList<>();
    
    //Lista para errores
    public ArrayList<Errors> Errores = new ArrayList();

    //Método para manejar algún error sintáctico
    public void syntax_error(Symbol s){ 
        Errores.add(new Errors("Sintáctico", "Error de sintaxis detectado. Símbolo: " + s.value, s.left + "", s.right + ""));
    } 

    //Método errores sintácticos en el que ya no es posible recuperar errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + (s.left)+ " Columna "+s.right+". Componente " + s.value + " no reconocido."); 
    }

    public ArrayList<Errors> getErrores(){
        return Errores;
    }

:}

terminal String DOSPUNTOS, PTCOMA,LLAVABRE,LLAVCIERRA;
terminal String MAS,POR, PORCENTAJE;
terminal String DECIMAL, ID, ASCII;
terminal String PR_CONJ, MENOS, MAYOR, COLOCHO, PUNTO, OR, COMA, INTERROG, LN, COMSIMPLE;
terminal String COMDOBLE, COMILLA;

non terminal ini, cuerpo, conjunto, definicion, expresion, cuerpoExpresion, especiales, definido;
non terminal lexemas, usoConjuntos, data, simbolos, asciiSymb, asciiComplement;

start with ini;

ini ::= LLAVABRE:a cuerpo:b LLAVCIERRA:c;

cuerpo ::= conjunto:a
                |cuerpo:a conjunto:b
                | expresion:a
                | cuerpo:a expresion:b
                | lexemas:a
                | cuerpo:a lexemas:b
                | cuerpo error
;

conjunto ::= PR_CONJ:a DOSPUNTOS:b ID:c MENOS:d MAYOR:e definicion:f PTCOMA:g
                  | error PTCOMA
;

definicion ::= ID:a COLOCHO:b ID:c
                    | asciiSymb:a COLOCHO:b asciiSymb:c
                    | definido:a
;

definido ::= ID:a
                 | definido:a ID:b
                 | definido:a COMA:b ID:c
                 | asciiSymb:a
                 | definido:a asciiComplement:b
                 | definido:a COMA:b asciiComplement:c
                 | especiales:a
                 | definido:a COMA:b especiales:c
;

asciiComplement ::= PORCENTAJE:a {:
                                    RESULT = a;
                                :}
                                | POR:a {:
                                    RESULT = a;
                                :}
                                | MAS:a {:
                                    RESULT = a;
                                :}
                                | PUNTO:a {:
                                    RESULT = a;
                                :}
                                | DOSPUNTOS:a {:
                                    RESULT = a;
                                :}
                                | LLAVABRE:a {:
                                    RESULT = a;
                                :}
                                | LLAVCIERRA:a {:
                                    RESULT = a;
                                :}
                                | OR:a {:
                                    RESULT = a;
                                :}
                                | INTERROG:a {:
                                    RESULT = a;
                                :}
                                | MENOS:a {:
                                    RESULT = a;
                                :}
                                | MAYOR:a {:
                                    RESULT = a;
                                :}
;

expresion ::= ID:a MENOS MAYOR:b cuerpoExpresion:c PTCOMA:d {:
                        arboles.add(new MetodoArbol((Nodo)c));
                    :}
;

cuerpoExpresion ::=  PUNTO:a cuerpoExpresion:b cuerpoExpresion:c {:
                                    Nodo padre = new Nodo(a);
                                    padre.setHijoIzq((Nodo)b);
                                    padre.setHijoDer((Nodo)c);
                                    RESULT = padre;
                                :}
                                | OR:a cuerpoExpresion:b cuerpoExpresion:c {:
                                    Nodo padre = new Nodo(a);
                                    padre.setHijoIzq((Nodo)b);
                                    padre.setHijoDer((Nodo)c);
                                    RESULT = padre;
                                :}
                                | POR:a cuerpoExpresion:b {:
                                    Nodo padre = new Nodo(a);
                                    padre.setHijoIzq((Nodo)b);
                                    RESULT = padre;
                                :}
                                | MAS:a cuerpoExpresion:b {:
                                    Nodo padre = new Nodo(a);
                                    padre.setHijoIzq((Nodo)b);
                                    RESULT = padre;
                                :}
                                | INTERROG:a cuerpoExpresion:b  {:
                                    Nodo padre = new Nodo(a);
                                    padre.setHijoIzq((Nodo)b);
                                    RESULT = padre;
                                :}
                                | usoConjuntos:a {:
                                    Nodo hoja = new Nodo((String)a);
                                    hoja.setHoja(true);
                                    hoja.setAnulable(false);
                                    RESULT = hoja;
                                :}
                                | COMILLA:a data:b COMILLA:c{:
                                    Nodo hoja = new Nodo((String)b);
                                    hoja.setHoja(true);
                                    hoja.setAnulable(false);
                                    RESULT = hoja;
                                :}
;

usoConjuntos ::= LLAVABRE:a ID:b LLAVCIERRA:c {:
                                RESULT = b;
                            :}
;

especiales ::= LN:a {:
                        RESULT = a;
                    :}
                    | COMSIMPLE:a {:
                        RESULT = a;
                    :}
                    | COMDOBLE:a {:
                        RESULT = a;
                    :}
;

data ::=  ID:a {:
                RESULT = a;
            :}
            | data:a ID:b {:
                RESULT = b;
            :}
            | DECIMAL:a  {:
                RESULT = a;
            :}
            | data:a DECIMAL:b {:
                RESULT = b;
            :}
            | especiales:a  {:
                RESULT = a;
            :}
            | data:a especiales:b {:
                RESULT = b;
            :}
            | asciiSymb:a  {:
                RESULT = a;
            :}
            | data:a asciiSymb:b {:
                RESULT = b;
            :}
;

simbolos ::=  PORCENTAJE:a {:
                        RESULT = a;
                    :}
                    | POR:a {:
                        RESULT = a;
                    :}
                    | MAS:a {:
                        RESULT = a;
                    :}
                    | COMA:a {:
                        RESULT = a;
                    :}
                    | PUNTO:a {:
                        RESULT = a;
                    :}
                    | DOSPUNTOS:a {:
                        RESULT = a;
                    :}
                    | PTCOMA:a {:
                        RESULT = a;
                    :}
                    | LLAVABRE:a {:
                        RESULT = a;
                    :}
                    | LLAVCIERRA:a {:
                        RESULT = a;
                    :}
                    | OR:a {:
                        RESULT = a;
                    :}
                    | INTERROG:a{:
                        RESULT = a;
                    :}
                    | MENOS:a{:
                        RESULT = a;
                    :}
                    | MAYOR:a{:
                        RESULT = a;
                    :}
;

asciiSymb ::= ASCII:a {:
                        RESULT = a;
                    :}
                    | simbolos:a {:
                        RESULT = a;
                    :}
;
lexemas ::= PORCENTAJE:a PORCENTAJE:b
                 | ID:a DOSPUNTOS:b COMILLA:c data:d COMILLA:e PTCOMA:f
;
